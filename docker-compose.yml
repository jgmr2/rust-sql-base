services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: rust-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Rust
  rust-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rust-sql-base
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${API_PORT}:80"
    volumes:
      - ./backend/public:/public
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_HOURS: ${JWT_EXPIRATION_HOURS}
      RUST_LOG: ${RUST_LOG}
      ENVIRONMENT: ${ENVIRONMENT}
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
